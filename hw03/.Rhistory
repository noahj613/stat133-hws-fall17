library(dplyr)
data <- read_csv("C://Users/13noa/Downloads/distribution-list-all.csv", skip = 3)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons"))
data <- read_csv("C://Users/13noa/Downloads/distribution-list-all.csv", skip = 4)
View(data)
data <- read_csv("C://Users/13noa/Downloads/distribution-list-all.csv", skip = 5)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons"))
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Item)
View(data.trim)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Item)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by("Item")
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by($Item)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Item)
data.trim <- select(data, c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Grade)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Grade)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Item)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
group_by(Item, Addons)
View(data.trim)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
arrange(Item, Addons)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
arrange(Item, Addons) %>%
filter(Campus != "Yu Ming")
summary(data.trim$Item)
count(data.trim$Item)
groups(data.trim$Item)
tally(data.trim$Item)
count_(data.trim$Item)
list(data.trim$Item)
unique(data.trim$Item)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
arrange(Item, Addons) %>%
filter(Campus != "Yu Ming") %>%
filter(Item != "Please Choose a Side")
unique(data.trim$Item)
data.trim <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
arrange(Item, Addons) %>%
filter(Campus != "Yu Ming") %>%
filter(Item != "Please Choose a Side")
data.sides <- data %>%
select(c("Campus", "Name", "Classroom", "Grade", "Item", "Addons")) %>%
arrange(Item, Addons) %>%
filter(Campus != "Yu Ming") %>%
filter(Item == "Please Choose a Side")
install.packages("googlesheets")
library(googlesheets)
gs_auth
gs_browse
install.packages("xlsx")
library(xlsx)
library(rjava)
library(rJava)
library("xlsx", lib.loc="~/R/win-library/3.4")
detach("package:xlsx", unload=TRUE)
library("rJava", lib.loc="~/R/win-library/3.4")
detach("package:rJava", unload=TRUE)
install.packages("xlsimple")
library(readr)    # importing data
# ===================================================================
# Title: Cleaning Data
# Description:
#   This script performs cleaning tasks and transformations on
#   various columns of the raw data file.
# Input(s): data file 'raw-data.csv'
# Output(s): data file 'clean-data.csv'
# Author: Noah Weingarten
# Date: 10-05-2017
# ===================================================================
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
read_csv("nba2017-players.csv")
warriors <- nba2017_players %>%
filter(nba2017_players$team == "GSW")
write.csv(warriors, file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/warriors.csv", row.names = TRUE)
lakers <- nba2017_players %>%
filter(nba2017_players$team == "LAL")
lakers <- arrange(lakers, desc(experience))
write_csv(lakers, path = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/lakers.csv")
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/data-structure.txt")
str(nba2017_players)
sink()
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/summary-warriors.txt")
summary(warriors)
sink()
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/summary-lakers.txt")
summary(lakers)
sink()
png(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/scatterplot-height-weight.png")
plot(nba2017_players$height, nba2017_players$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
png(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/scatterplot-height-weight-hi-res.png", height = 700,
width = 800)
plot(nba2017_players$height, nba2017_players$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
jpeg(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/histogram-height-weight.jpeg", width = 600,
height = 400)
hist(x = nba2017_players$age)
dev.off()
pdf(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/histogram-height-weight.pdf", height = 5)
hist(x = nba2017_players$age)
dev.off()
gg_pts_salary <- ggplot(nba2017_players, aes(x = points, y = salary)) + geom_point()
ggsave(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/points_salary.pdf", width = 7, height = 5,
plot = gg_pts_salary)
gg_ht_wt_position <- ggplot(nba2017_players, aes(x = height, y = weight)) + geom_point() + facet_wrap(~position)
ggsave(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/height_weight_by_position.pdf",
width = 7, height = 5, plot = gg_ht_wt_position)
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
read_csv("C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/nba2017-players.csv")
nba2017_players <- read_csv("C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/nba2017-players.csv")
warriors <- nba2017_players %>%
filter(nba2017_players$team == "GSW")
# ===================================================================
# Title: Cleaning Data
# Description:
#   This script performs cleaning tasks and transformations on
#   various columns of the raw data file.
# Input(s): data file 'raw-data.csv'
# Output(s): data file 'clean-data.csv'
# Author: Noah Weingarten
# Date: 10-05-2017
# ===================================================================
# packages
library(readr)    # importing data
library(dplyr)    # data wrangling
library(ggplot2)  # graphics
nba2017_players <- read_csv("C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/nba2017-players.csv")
warriors <- nba2017_players %>%
filter(nba2017_players$team == "GSW")
write.csv(warriors, file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/warriors.csv", row.names = TRUE)
lakers <- nba2017_players %>%
filter(nba2017_players$team == "LAL")
lakers <- arrange(lakers, desc(experience))
write_csv(lakers, path = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/data/lakers.csv")
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/data-structure.txt")
str(nba2017_players)
sink()
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/summary-warriors.txt")
summary(warriors)
sink()
sink(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/output/summary-lakers.txt")
summary(lakers)
sink()
png(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/scatterplot-height-weight.png")
plot(nba2017_players$height, nba2017_players$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
png(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/scatterplot-height-weight-hi-res.png", height = 700,
width = 800)
plot(nba2017_players$height, nba2017_players$weight, pch = 20, xlab = 'Height', ylab = 'Weight')
dev.off()
jpeg(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/histogram-height-weight.jpeg", width = 600,
height = 400)
hist(x = nba2017_players$age)
dev.off()
pdf(file = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/histogram-height-weight.pdf", height = 5)
hist(x = nba2017_players$age)
dev.off()
gg_pts_salary <- ggplot(nba2017_players, aes(x = points, y = salary)) + geom_point()
ggsave(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/points_salary.pdf", width = 7, height = 5,
plot = gg_pts_salary)
gg_ht_wt_position <- ggplot(nba2017_players, aes(x = height, y = weight)) + geom_point() + facet_wrap(~position)
ggsave(filename = "C://Users/13noa/stat133/stat133-hws-fall17/lab06/images/height_weight_by_position.pdf",
width = 7, height = 5, plot = gg_ht_wt_position)
lakers %>%
select(player)
warriors %>%
filter(position == "PG") %>%
select(player, salary)
nba2017_players %>%
filter(experience > 10, salary < 10000000) %>%
select(player, age, team)
?head
head(
nba2017_players %>%
filter(experience == 0, age == 20) %>%
select(player, team, height, weight),
5)
head(
nba2017_players %>%
filter(experience == 0, age == 20) %>%
select(player, team, height, weight),
5
)
gsw_mpg <- warriors %>%
select(player, experience, mutate(min_per_game = minutes/games)) %>%
arrange(descending = TRUE)
gsw_mpg <- warriors %>%
select(player, experience, mutate(warriors, min_per_game = minutes/games)) %>%
arrange(descending = TRUE)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes/games) %>%
select(player, experience) %>%
arrange(min_per_game, descending = TRUE)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes/games)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes/games) %>%
select(player, experience) %>%
arrange(min_per_game, descending = TRUE)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes/games) %>%
select(player, experience) %>%
arrange(min_per_game, descending = TRUE)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes/games) %>%
select(player, experience) %>%
arrange(warriors$min_per_game, descending = TRUE)
?mutate
gsw_mpg <- warriors %>%
mutate(warriors, min_per_game = minutes/games) %>%
select(player, experience) %>%
arrange(warriors$min_per_game, descending = TRUE)
gsw_mpg <- warriors %>%
mutate(warriors, min_per_game = minutes/games)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes / games) %>%
select(player, experience) %>%
arrange(min_per_game, descending = TRUE)
gsw_mpg <- warriors %>%
mutate(min_per_game = minutes / games) %>%
select(player, experience, min_per_game) %>%
arrange(desc(min_per_game))
nba2017_players %>%
group_by(team)
nba2017_players %>%
group_by(team) %>%
summarise(
avg_3 = sum(points3)/count(player)
) %>%
arrange(avg_3)
nba2017_players %>%
group_by(team) %>%
summarise(
avg_3 = mean(points3)
) %>%
arrange(avg_3)
head(nba2017_players %>%
group_by(team) %>%
summarise(
avg_3 = mean(points3)
) %>%
arrange(avg_3),
5
)
nba2017_players %>%
filter(position == "PF", experience >= 5, experience <= 10) %>%
summarise(
avg_age = mean(age),
sd_age = sd(age)
)
nba2017_players %>%
filter(position == "PF", experience >= 5, experience <= 10) %>%
summarise(
avg_age_PF = mean(age),
sd_age_PF = sd(age)
)
# your function f()
f <- function(x){
x^2
}
# your function g()
g <- function(x){
2 * x + 5
}
```r
f(2)
f(-5)
g(0)
g(-5/2)
```
f(2)
# your function f()
f <- function(x){
x^2
}
# your function g()
g <- function(x){
2 * x + 5
}
f(2)
f(-5)
g(0)
g(-5/2)
# your function fog()
fog <- function(x){
f(g(x))
}
# your function gof()
gof <- function(x){
g(f(x))
}
fog(2)
fog(-5)
gof(0)
gof(-5/2)
# your pythagoras() function
pythagoras <- function(a, b){
a^2 + b^2
}
# your test
pythagoras(3, 4)
# your test
pythagoras <- function(a, b){
b <- a
a^2 + b^2
}
pythagoras(5)
?df
?data.frame
df <- data.frame(row.names = c("miles", "kms"))
df <- data.frame(1:10, row.names = c("miles", "kms"))
df <- data.frame(1:10, miles2kms(1:10), row.names = c("miles", "kms"))
miles2kms <- function(x) {
# fill in
x * 1.6
}
df <- data.frame(1:10, miles2kms(1:10), row.names = c("miles", "kms"))
?list
?count
?seq
a <- c(1:10, seq(from 10, to 100, by 10))
a <- c(1:10, seq(from = 10, to = 100, by = 10))
a <- c(1:9, seq(from = 10, to = 100, by = 10))
df <- data.frame(a, miles2kms(a), row.names = c("miles", "kms"))
df <- data.frame(a, miles2kms(a), row.names = "miles", "kms")
?data_frame
?data.frame
df <- data.frame(a, miles2kms(a))
?colnames()
colnames(df) <- c("miles", "kms")
df
# your gallons2liters() function
gallons2liters <- function(x){
x * 3.78541
}
# your liters2gallons() function
liters2gallons <- function(x){
1/gallons2liters(x)
}
gallons2liters(2)
liters2gallons(7.57082)
# your liters2gallons() function
liters2gallons <- function(x){
x/3.78541
}
liters2gallons(7.57082)
?inverse
??inverse
df2 <- data.frame(a, liters2gallons(a))
colnames(df2) <- c("liters", "gallons")
df2
# your code
seconds2years <- function(x){
x/31536000
}
seconds2years(1000000000)
# your code
gaussian <- function(x, m, s){
exp(1)^((-1/2) * ((x - m)/s))/(s * sqrt(2 * pi))
}
gaussian(1, 0, 2)
dnorm(x = 1, mean = 0, sd = 2)
# your code
gaussian <- function(x, m, s){
exp(1)^((-1/2) * ((x - m)/s)^2)/(s * sqrt(2 * pi))
}
gaussian(1, 0, 2)
# you should get a plot like this one
x_values <- seq(from = -4.5, to = 4.5, by = 0.1)
y_values <- dnorm(x_values, mean = 0, sd = 2)
plot(x_values, y_values, las = 1, type = "l", lwd = 2)
# your code
x_values <- seq(from = -4.5, to = 4.5, by = 0.1)
y_values <- gaussian(x_values, mean = 0, sd = 2)
# your code
x_values <- seq(from = -4.5, to = 4.5, by = 0.1)
y_values <- gaussian(x_values, m = 0, s = 2)
plot(x_values, y_values, las = 1, type = "l", lwd = 2)
library(readr)
nba2017_roster <- read_csv("C:/Users/13noa/stat133/stat133-hws-fall17/hw03/data/nba2017-roster.csv")
View(nba2017_roster)
library(readr)
nba2017_stats <- read_csv("C:/Users/13noa/stat133/stat133-hws-fall17/hw03/data/nba2017-stats.csv")
View(nba2017_stats)
setwd(C://Users/13noa/stat133/stat133-hws-fall17)
setwd(C:/Users/13noa/stat133/stat133-hws-fall17)
setwd(Users/13noa/stat133/stat133-hws-fall17)
setwd("C:/Users/13noa/stat133/stat133-hws-fall17/hw03")
library(readr)
roster <- read_csv("data/nba2017_roster.csv")
roster <- read_csv("/data/nba2017_roster.csv")
roster <- read_csv("/data/nba2017-roster.csv")
roster <- read_csv("../data/nba2017-roster.csv")
roster <- read_csv("./data/nba2017-roster.csv")
stats <- read_csv("./data/nba2017-stats.csv")
source('C:/Users/13noa/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
library(dplyr)
stats %>%
mutate(missed_fg = field_goals_atts - field_goals_made)
stats %>%
mutate(missed_fg = field_goals_atts - field_goals_made,
missed_ft = points1_atts - points1_made,
points = 3 * points3_made + 2 * points2_made + points1_made,
rebounds = off_rebounds + def_rebounds,
efficiency = (points + rebounds + assists + steals + blocks - missed_fg - missed_ft - turnovers)/games_played)
#Reading the data into R
roster.raw <- read_csv("./data/nba2017-roster.csv")
stats.raw <- read_csv("./data/nba2017-stats.csv")
stats <- stats.raw %>%
mutate(missed_fg = field_goals_atts - field_goals_made,
missed_ft = points1_atts - points1_made,
points = 3 * points3_made + 2 * points2_made + points1_made,
rebounds = off_rebounds + def_rebounds,
efficiency = (points + rebounds + assists + steals + blocks - missed_fg - missed_ft - turnovers)/games_played)
source('C:/Users/13noa/stat133/stat133-hws-fall17/hw03/code/make-teams-table.R', echo=TRUE)
sink(file = "./output/efficiency-summary.txt")
summary(stats[efficiency])
sink()
View(stats)
?summary
sink(file = "./output/efficiency-summary.txt")
summary(stats[, efficiency])
sink()
sink(file = "./output/efficiency-summary.txt")
summary(stats[ , efficiency])
sink()
sink(file = "./output/efficiency-summary.txt")
summary(stats[ , "efficiency"])
sink()
teams <- left_join(stats, roster.raw)
teams.raw <- left_join(stats, roster.raw)
teams <- teams.raw %>%
group_by(team)
summary(teams)
View(teams)
teams <- teams.raw %>%
group_by(team) %>%
summarise(experience = sum(experience))
View(teams)
teams <- teams.raw %>%
group_by(team) %>%
summarise(experience = sum(experience),
salary = round(sum(salary)/(10^6)), digits = 2)
View(teams)
teams <- teams.raw %>%
group_by(team) %>%
summarise(experience = sum(experience),
salary = round(sum(salary)/(10^6), digits = 2))
View(teams)
teams <- teams.raw %>%
group_by(team) %>%
summarise(experience = sum(experience),
salary = round(sum(salary)/(10^6), digits = 2),
points3 = sum(points3),
points2 = sum(points2),
free_throws = sum(points1),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
efficiency = sum(efficiency))
View(teams.raw)
teams <- teams.raw %>%
group_by(team) %>%
summarise(experience = sum(experience),
salary = round(sum(salary)/(10^6), digits = 2),
points3 = sum(3 * points3_made),
points2 = sum(2 * points2_made),
free_throws = sum(points1_made),
points = sum(points),
off_rebounds = sum(off_rebounds),
def_rebounds = sum(def_rebounds),
assists = sum(assists),
steals = sum(steals),
blocks = sum(blocks),
turnovers = sum(turnovers),
fouls = sum(fouls),
efficiency = sum(efficiency))
View(teams)
sink(file = "./data/teams-summary.txt")
summary(stats)
sink()
?write_csv
write_csv(teams, "./data/nba2017-teams.csv", delim = ",")
write_csv(teams, "./data/nba2017-teams.csv")
sink(file = "./data/teams-summary.txt")
summary(teams)
sink()
